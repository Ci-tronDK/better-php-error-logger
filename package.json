{
    "name": "better-php-error-logger",
    "displayName": "Better PHP Error Logger",
    "description": "A PHP error logger with customization options",
    "icon": "images/better-php-error-logger.png",
    "version": "0.1.38",
    "publisher": "martinvz",
    "engines": {
        "vscode": "^1.66.0"
    },
    "categories": [
        "Debuggers",
        "Other"
    ],
    "keywords": [
        "php",
        "error",
        "logger",
        "log",
        "debug",
        "debugger",
        "debugging",
        "customisation",
        "customization",
        "error logger",
        "errorlog",
        "error_log",
        "output buffer",
        "ob_get_contents",
        "better",
        "var_dump",
        "var dump",
        "var_export",
        "var export",
        "call stack",
        "stack trace",
        "echo error",
        "br",
        "pre",
        "log error",
        "log error message",
        "line number",
        "file name",
        "laravel",
        "laravel error",
        "laravel log",
        "laravel debug",
        "laravel log level"
    ],
    "main": "./out/main.js",
    "activationEvents": [],
    "contributes": {
        "commands": [
            {
                "command": "extension.betterPhpErrorLogger.errorLog",
                "title": "Error log"
            },
            {
                "command": "extension.betterPhpErrorLogger.printWithCallStack",
                "title": "Call stack"
            },
            {
                "command": "extension.betterPhpErrorLogger.varDumpExportVariable",
                "title": "Var dump or var export variable"
            },
            {
                "command": "extension.betterPhpErrorLogger.useEchoInstead",
                "title": "Use echo instead"
            },
            {
                "command": "extension.betterPhpErrorLogger.deleteErrorLogs",
                "title": "Delete error logs"
            },
            {
                "command": "extension.betterPhpErrorLogger.printCurrentOutputBuffer",
                "title": "Get current output buffer"
            },
            {
                "command": "extension.betterPhpErrorLogger.printCurrentOutputBufferUseEcho",
                "title": "Get current output buffer, use echo"
            },
            {
                "command": "extension.betterPhpErrorLogger.quickPick",
                "title": "Quick pick"
            },
            {
                "command": "extension.betterPhpErrorLogger.logMultiple",
                "title": "Log multiple as array"
            },
            {
                "command": "extension.betterPhpErrorLogger.newLinesForEcho",
                "title": "New lines for echo"
            }
        ],
        "keybindings": [
            {
                "command": "extension.betterPhpErrorLogger.errorLog",
                "key": "ctrl+alt+d",
                "when": "editorLangId=='php' && editorTextFocus && !editorReadonly",
                "mac": "ctrl+alt+d",
                "args": "errorLog"
            },
            {
                "command": "extension.betterPhpErrorLogger.printWithCallStack",
                "key": "ctrl+alt+c",
                "when": "editorLangId=='php' && editorTextFocus && !editorReadonly",
                "mac": "ctrl+alt+c",
                "args": "printWithCallStack"
            },
            {
                "command": "extension.betterPhpErrorLogger.varDumpExportVariable",
                "key": "ctrl+alt+v",
                "when": "editorLangId=='php' && editorTextFocus && !editorReadonly",
                "mac": "ctrl+alt+v",
                "args": "varDumpExportVariable"
            },
            {
                "command": "extension.betterPhpErrorLogger.useEchoInstead",
                "key": "ctrl+alt+e",
                "when": "editorLangId=='php' && editorTextFocus && !editorReadonly",
                "mac": "ctrl+alt+e",
                "args": "useEchoInstead"
            },
            {
                "command": "extension.betterPhpErrorLogger.deleteErrorLogs",
                "key": "ctrl+alt+x",
                "when": "editorLangId=='php' && editorTextFocus && !editorReadonly",
                "mac": "ctrl+alt+x"
            },
            {
                "command": "extension.betterPhpErrorLogger.printCurrentOutputBuffer",
                "key": "ctrl+alt+o",
                "when": "editorLangId=='php' && editorTextFocus && !editorReadonly",
                "mac": "ctrl+alt+o",
                "args": "printCurrentOutputBuffer"
            },
            {
                "command": "extension.betterPhpErrorLogger.printCurrentOutputBufferUseEcho",
                "key": "ctrl+alt+p",
                "when": "editorLangId=='php' && editorTextFocus && !editorReadonly",
                "mac": "ctrl+alt+p",
                "args": "printCurrentOutputBufferUseEcho"
            },
            {
                "command": "extension.betterPhpErrorLogger.quickPick",
                "key": "ctrl+alt+q",
                "when": "editorLangId=='php' && editorTextFocus && !editorReadonly",
                "mac": "ctrl+alt+q"
            },
            {
                "command": "extension.betterPhpErrorLogger.logMultiple",
                "key": "ctrl+alt+a",
                "when": "editorLangId=='php' && editorTextFocus && !editorReadonly",
                "mac": "ctrl+alt+a"
            },
            {
                "command": "extension.betterPhpErrorLogger.newLinesForEcho",
                "key": "ctrl+alt+w",
                "when": "editorLangId=='php' && editorTextFocus && !editorReadonly",
                "mac": "ctrl+alt+w"
            }
        ],
        "configuration": {
            "title": "Better PHP Error Logger",
            "properties": {
                "betterPhpErrorLogger.errorLogs": {
                    "type": "array",
                    "title": "Error logs",
                    "items": {
                        "type": "string",
                        "description": "This will be error logged"
                    },
                    "default": [
                        "'${selectedVarString}: ' . print_r(${selectedVar}, true)",
                        "'in ' . __FILE__ . ' on line ' . __LINE__"
                    ],
                    "description": "Write an array, with objects with the property errorLog, where each objects errorlog value will be error logged. Use ${selectedVar} for the selected variable. And ${selectedVarString} for the variable string (Read readme)"
                },
                "betterPhpErrorLogger.defaultVariable": {
                    "type": "object",
                    "title": "Default variable",
                    "properties": {
                        "name": {
                            "type": "string",
                            "description": "Set the name of the selectedVarString, when no variable is selected",
                            "default": "here"
                        },
                        "value": {
                            "type": "string",
                            "description": "Set the value of the variable, when no variable is selected",
                            "default": "__CLASS__ . '::' . __FUNCTION__"
                        }
                    },
                    "default": {
                        "name": "here",
                        "value": "__CLASS__ . '::' . __FUNCTION__"
                    },
                    "description": "Set name and value of the default selectedVarString, when no variable is selected",
                    "additionalProperties": false
                },
                "betterPhpErrorLogger.laravelLog": {
                    "type": "object",
                    "title": "Laravel log",
                    "properties": {
                        "useLaravelLog": {
                            "type": "boolean",
                            "default": false,
                            "description": "Set this to true to use the laravel log function instead of error_log"
                        },
                        "autoUse": {
                            "type": "boolean",
                            "default": true,
                            "description": "Set this to true to automatically add the use statement for the laravel log function. It will be added after the last use statement."
                        },
                        "laravelLogLevel": {
                            "type": "string",
                            "default": "debug",
                            "enum": [
                                "debug",
                                "info",
                                "notice",
                                "warning",
                                "error",
                                "critical",
                                "alert",
                                "emergency"
                            ],
                            "description": "Set the laravel log level to use"
                        },
                        "chooseLogLevel": {
                            "type": "boolean",
                            "default": false,
                            "description": "Set this to true to choose the laravel log level"
                        }
                    },
                    "default": {
                        "useLaravelLog": false,
                        "autoUse": true,
                        "laravelLogLevel": "debug",
                        "chooseLogLevel": false
                    },
                    "description": "Set useLaravelLog to true to use the laravel log function instead of error_log and set laravelLogLevel to the log level you want to use",
                    "additionalProperties": false
                },
                "betterPhpErrorLogger.usePHPParserForPositioning": {
                    "type": "boolean",
                    "title": "Use PHP Parser for positioning",
                    "default": true,
                    "description": "Set this to false to not use the vscode-php-parser for positioning. PHP Parser requires valid code. When false, error_logs will always be placed on the next line."
                },
                "betterPhpErrorLogger.printWithCallStack": {
                    "scope": "application",
                    "type": "string",
                    "title": "Print with call stack",
                    "default": "No call stack",
                    "enum": [
                        "No call stack",
                        "With call stack as string",
                        "With call stack as array"
                    ],
                    "description": "Set this to No call stack, With call stack as string or With call stack as array"
                },
                "betterPhpErrorLogger.varDumpExportVariable": {
                    "scope": "application",
                    "type": "string",
                    "title": "Var dump or export variable",
                    "default": "No var dump or export",
                    "enum": [
                        "No var dump or export",
                        "var_dump",
                        "var_export"
                    ],
                    "description": "Set this to No var dump or export, var_dump or var_export"
                },
                "betterPhpErrorLogger.newLinesForEcho": {
                    "scope": "application",
                    "type": "string",
                    "title": "New lines for echo",
                    "default": "pre",
                    "enum": [
                        "none",
                        "pre",
                        "br",
                        "PHP_EOL"
                    ],
                    "description": "Set this to none, pre, br or PHP_EOL"
                },
                "betterPhpErrorLogger.logMultiple": {
                    "scope": "application",
                    "type": "string",
                    "title": "Log multiple",
                    "default": "Normal",
                    "enum": [
                        "Normal",
                        "As compact array",
                        "Only first"
                    ],
                    "description": "Set this to Normal, As compact array or Only first"
                }
            }
        }
    },
    "scripts": {
        "lint": "eslint .",
        "pretest": "npm run lint",
        "test": "node ./built/test/runTest.js",
        "vscode:prepublish": "npm run esbuild-base -- --minify",
        "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/main.js --external:vscode --format=cjs --platform=node",
        "esbuild": "npm run esbuild-base -- --sourcemap",
        "esbuild-watch": "npm run esbuild-base -- --sourcemap --watch",
        "test-compile": "tsc -p ./"
    },
    "devDependencies": {
        "@types/glob": "^7.2.0",
        "@types/mocha": "^9.1.1",
        "@types/node": "14.x",
        "@types/vscode": "^1.66.0",
        "@vscode/test-electron": "^2.1.3",
        "esbuild": "^0.15.15",
        "eslint": "^8.14.0",
        "glob": "^8.0.1",
        "mocha": "^9.2.2",
        "typescript": "^4.7.3"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/MartinZielke/better-php-error-logger"
    },
    "sponsor": {
        "url": "https://github.com/sponsors/MartinZielke"
    },
    "bugs": {
        "url": "https://github.com/MartinZielke/better-php-error-logger/issues"
    },
    "author": {
        "name": "Martin Vest Zielke"
    },
    "license": "MIT",
    "dependencies": {
        "php-parser": "^3.1.1"
    }
}